<templateSet group="JavaScript">
  <template name="dd" value="console.log( $value$ );" description="console.log" toReformat="false" toShortenFQNames="true">
    <variable name="value" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="gs" value="get $varname$(){&#10;  this.posX;&#10;}&#10;&#10;set $varname$( $varname$ ){&#10;  this.$varname$ = $varname$;&#10;  &#10;  return this;&#10;}" description="ES6 Getter and Setter" toReformat="false" toShortenFQNames="true">
    <variable name="varname" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="+&gt;" value=" =&gt; { $END$ }" description="+&gt; to =&gt; {}" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="dep" value="this.$DependencyProperty$ = $Dependency$;" description="Dependency" toReformat="false" toShortenFQNames="true">
    <variable name="Dependency" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DependencyProperty" expression="Dependency" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="req" value="const $dep$ = require('$dep$');" description="require()" toReformat="false" toShortenFQNames="true">
    <variable name="dep" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
      <option name="JS_EXPRESSION" value="false" />
    </context>
  </template>
  <template name="/s" value="/soda-api/${environment}/$END$" description="" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JSON_STRING_VALUES" value="true" />
    </context>
  </template>
</templateSet>