<templateSet group="Jasmine">
  <template name="before" value="beforeEach( () =&gt; {&#10;  $END$&#10;});" description="beforeEach" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="aft" value="afterEach( () =&gt; {&#10;  $END$&#10;});" description="afterEach" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="it" value="it( '$TEST$', () =&gt; {&#10;  $END$&#10;});" description="Jasmine Spec" toReformat="false" toShortenFQNames="true">
    <variable name="TEST" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="desc" value="describe( '$DESC$', function(){&#10;  $END$&#10;});" description="Jasmine Describe" toReformat="false" toShortenFQNames="true">
    <variable name="DESC" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="inj" value="inject( ( $INJECTION$ ) =&gt; {&#10;  $INJECTED$ = $INJECTION$;&#10;});&#10;$END$" description="Inject" toReformat="false" toShortenFQNames="true">
    <variable name="INJECTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INJECTED" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="spy" value="spyOn( $OBJECT$, '$FUNCTION_NAME$' )$END$" description="spyOn" toReformat="false" toShortenFQNames="true">
    <variable name="OBJECT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION_NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="expect" value="expect( $RESULT$ ).$END$" description="expect" toReformat="false" toShortenFQNames="true">
    <variable name="RESULT" expression="" defaultValue="result" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="module" value="angular.mock.module( 'tonic.TicketWidget.TonicWidget$MODULE$', ( $$provide ) =&gt; {&#10;&#10;});" description="angular.mock.module" toReformat="true" toShortenFQNames="true">
    <variable name="MODULE" expression="" defaultValue="" alwaysStopAt="true" />
  </template>
  <template name="toHaveBeen" value="toHaveBeenCalledWith( $VAR$ );$END$" description="toHaveBeenCalledWith Matcher" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="toHaveBeenCalled" value="toHaveBeenCalled();$END$" description="toHaveBeenCalled Matcher" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="toEqu" value="toEqual( $VAR$ );$END$" description="toEqual" toReformat="true" toShortenFQNames="true">
    <variable name="VAR" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="toBeT" value="toBeTrue();$END$" description="toBeTrue" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="toBeF" value="toBeFalse();$END$" description="toBeFalse" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="and" value="and.callFake( $FUNC$ );" description="call Fake" toReformat="true" toShortenFQNames="true">
    <variable name="FUNC" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
</templateSet>